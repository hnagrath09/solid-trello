openapi: 3.0.0
info:
  version: 1.0.0
  title: Solid Trello API

servers:
  - url: http://localhost:8080
    description: Local server

paths:
  /lists:
    get:
      operationId: GetAllLists
      tags:
        - "application"
      description: Get all lists
      responses:
        "200":
          description: Get all lists successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/List"
  /list:
    post:
      operationId: CreateList
      tags:
        - "application"
      description: Create a list
      requestBody:
        description: List to create
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - listOrder
              properties:
                title:
                  type: string
                  example: "In Progress"
                listOrder:
                  type: integer
                  example: 1

      responses:
        "201":
          description: List created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/List"
  /task:
    post:
      operationId: CreateTask
      tags:
        - "application"
      description: Create a task
      requestBody:
        description: Task to create
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - taskOrder
                - listId
              properties:
                title:
                  type: string
                  example: "Add post request to create new tasks"
                taskOrder:
                  type: integer
                  example: 1
                listId:
                  type: string
                  example: 1

      responses:
        "201":
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
  /task/{taskId}:
    patch:
      operationId: UpdateTask
      tags:
        - "application"
      description: Update a task
      parameters:
        - $ref: "#/components/parameters/taskId"
      requestBody:
        description: Task to update
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTaskForm"
      responses:
        "200":
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
  /tasks/reorder:
    post:
      operationId: ReorderTasks
      tags:
        - "application"
      description: Reorder tasks
      requestBody:
        description: Tasks to reorder
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ReorderTasksForm"
      responses:
        "200":
          description: Tasks reordered successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
components:
  parameters:
    taskId:
      in: path
      name: taskId
      required: true
      schema:
        type: string
        example: 2
  schemas:
    List:
      type: object
      required:
        - id
        - title
        - tasks
        - listOrder
      properties:
        id:
          type: string
          example: 1
        title:
          type: string
          example: In Progress
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/Task"
        listOrder:
          type: integer
          description: Order of the list in the board
    Task:
      type: object
      required:
        - id
        - title
        - listId
        - taskOrder
      properties:
        id:
          type: string
          example: 1
        title:
          type: string
          example: Task 1
        listId:
          type: string
          example: 1
          description: List id associated with this task
        taskOrder:
          type: integer
          example: 1
          description: Order of this task in the list
    UpdateTaskForm:
      type: object
      properties:
        title:
          type: string
          example: Task 1
        taskOrder:
          type: integer
          example: 1
          description: Order of this task in the list
        listId:
          type: string
          example: 1
          description: List id associated with this task
    ReorderTasksForm:
      type: object
      required:
        - taskId
        - taskOrder
      properties:
        taskId:
          type: string
          example: 1
        taskOrder:
          type: integer
          example: 1
          description: Order of this task in the list
